events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    upstream api_servers {
        server go-server:8080;
        server ruby-server:3001;
    }

    server {
        listen 80;

        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            # IPアドレスの末尾で簡易的に振り分け先を決定
            set $backend_server "http://go-server:8080";
            if ($remote_addr ~* "\.(?:[0-4]|1[0-9]|2[0-4])$") { # IPアドレスの末尾が0-4, 10-19, 20-24の場合
                set $backend_server "http://ruby-server:3001";
            }

            # モードを決定するヘッダーを付与
            proxy_set_header X-TS-Mode "M"; # デフォルトはまひろ
            if ($backend_server ~* "ruby") {
                proxy_set_header X-TS-Mode "O"; # Rubyならお兄ちゃん
            }

            proxy_pass $backend_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /analytics/ {
            proxy_pass http://django-server:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # 意図的なエラーページへのルーティング
        error_page 500 502 503 504 /custom_50x.html;
        location = /custom_50x.html {
            # Apacheにエラー処理を丸投げ
            proxy_pass http://apache-server:80;
        }
    }
}
